//
//  Onoicons.swift
//  ono
//
//  Created by Szabolcs Toth on 10/23/18.
//  Copyright Â© 2018 . All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import Cocoa

public class Onoicons : NSObject {

    //// Cache

    private struct Cache {
        static var imageOfHardware: NSImage?
        static var imageOfSoftware: NSImage?
        static var imageOfSavingFile: NSImage?
        static var imageOfOpeningFile: NSImage?
    }

    //// Drawing Methods

    @objc dynamic public class func drawHardware() {
        //// Color Declarations
        let fillColor = NSColor(red: 1, green: 1, blue: 1, alpha: 1)
        let fillColor2 = NSColor(red: 0.463, green: 0.887, blue: 0.903, alpha: 1)
        let strokeColor = NSColor(red: 0.374, green: 0.391, blue: 0.396, alpha: 1)
        let fillColor3 = NSColor(red: 0.723, green: 0.95, blue: 0.96, alpha: 1)

        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 5.65, y: 5.65, width: 38.7, height: 38.7), xRadius: 1.6, yRadius: 1.6)
        fillColor.setFill()
        rectanglePath.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = NSBezierPath(rect: NSRect(x: 8.07, y: 8.07, width: 33.85, height: 33.85))
        fillColor2.setFill()
        rectangle2Path.fill()


        //// Oval Drawing
        let ovalPath = NSBezierPath(ovalIn: NSRect(x: 38.7, y: 4.8, width: 6.5, height: 6.5))
        fillColor.setFill()
        ovalPath.fill()


        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 10, y: 46.77))
        bezierPath.line(to: NSPoint(x: 10, y: 50))
        strokeColor.setStroke()
        bezierPath.lineWidth = 2
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 13, y: 46.77))
        bezier2Path.line(to: NSPoint(x: 13, y: 50))
        strokeColor.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: 16, y: 46.77))
        bezier3Path.line(to: NSPoint(x: 16, y: 50))
        strokeColor.setStroke()
        bezier3Path.lineWidth = 2
        bezier3Path.stroke()


        //// Bezier 4 Drawing
        let bezier4Path = NSBezierPath()
        bezier4Path.move(to: NSPoint(x: 20, y: 46.77))
        bezier4Path.line(to: NSPoint(x: 20, y: 50))
        strokeColor.setStroke()
        bezier4Path.lineWidth = 2
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        let bezier5Path = NSBezierPath()
        bezier5Path.move(to: NSPoint(x: 23, y: 46.77))
        bezier5Path.line(to: NSPoint(x: 23, y: 50))
        strokeColor.setStroke()
        bezier5Path.lineWidth = 2
        bezier5Path.stroke()


        //// Bezier 6 Drawing
        let bezier6Path = NSBezierPath()
        bezier6Path.move(to: NSPoint(x: 26, y: 46.77))
        bezier6Path.line(to: NSPoint(x: 26, y: 50))
        strokeColor.setStroke()
        bezier6Path.lineWidth = 2
        bezier6Path.stroke()


        //// Bezier 7 Drawing
        let bezier7Path = NSBezierPath()
        bezier7Path.move(to: NSPoint(x: 29, y: 46.77))
        bezier7Path.line(to: NSPoint(x: 29, y: 50))
        strokeColor.setStroke()
        bezier7Path.lineWidth = 2
        bezier7Path.stroke()


        //// Bezier 8 Drawing
        let bezier8Path = NSBezierPath()
        bezier8Path.move(to: NSPoint(x: 33, y: 46.77))
        bezier8Path.line(to: NSPoint(x: 33, y: 50))
        strokeColor.setStroke()
        bezier8Path.lineWidth = 2
        bezier8Path.stroke()


        //// Bezier 9 Drawing
        let bezier9Path = NSBezierPath()
        bezier9Path.move(to: NSPoint(x: 36, y: 46.77))
        bezier9Path.line(to: NSPoint(x: 36, y: 50))
        strokeColor.setStroke()
        bezier9Path.lineWidth = 2
        bezier9Path.stroke()


        //// Bezier 10 Drawing
        let bezier10Path = NSBezierPath()
        bezier10Path.move(to: NSPoint(x: 39, y: 46.77))
        bezier10Path.line(to: NSPoint(x: 39, y: 50))
        strokeColor.setStroke()
        bezier10Path.lineWidth = 2
        bezier10Path.stroke()


        //// Bezier 11 Drawing
        let bezier11Path = NSBezierPath()
        bezier11Path.move(to: NSPoint(x: 10, y: 0))
        bezier11Path.line(to: NSPoint(x: 10, y: 3.23))
        strokeColor.setStroke()
        bezier11Path.lineWidth = 2
        bezier11Path.stroke()


        //// Bezier 12 Drawing
        let bezier12Path = NSBezierPath()
        bezier12Path.move(to: NSPoint(x: 13, y: 0))
        bezier12Path.line(to: NSPoint(x: 13, y: 3.23))
        strokeColor.setStroke()
        bezier12Path.lineWidth = 2
        bezier12Path.stroke()


        //// Bezier 13 Drawing
        let bezier13Path = NSBezierPath()
        bezier13Path.move(to: NSPoint(x: 16, y: 0))
        bezier13Path.line(to: NSPoint(x: 16, y: 3.23))
        strokeColor.setStroke()
        bezier13Path.lineWidth = 2
        bezier13Path.stroke()


        //// Bezier 14 Drawing
        let bezier14Path = NSBezierPath()
        bezier14Path.move(to: NSPoint(x: 20, y: 0))
        bezier14Path.line(to: NSPoint(x: 20, y: 3.23))
        strokeColor.setStroke()
        bezier14Path.lineWidth = 2
        bezier14Path.stroke()


        //// Bezier 15 Drawing
        let bezier15Path = NSBezierPath()
        bezier15Path.move(to: NSPoint(x: 23, y: 0))
        bezier15Path.line(to: NSPoint(x: 23, y: 3.23))
        strokeColor.setStroke()
        bezier15Path.lineWidth = 2
        bezier15Path.stroke()


        //// Bezier 16 Drawing
        let bezier16Path = NSBezierPath()
        bezier16Path.move(to: NSPoint(x: 26, y: 0))
        bezier16Path.line(to: NSPoint(x: 26, y: 3.23))
        strokeColor.setStroke()
        bezier16Path.lineWidth = 2
        bezier16Path.stroke()


        //// Bezier 17 Drawing
        let bezier17Path = NSBezierPath()
        bezier17Path.move(to: NSPoint(x: 29, y: 0))
        bezier17Path.line(to: NSPoint(x: 29, y: 3.23))
        strokeColor.setStroke()
        bezier17Path.lineWidth = 2
        bezier17Path.stroke()


        //// Bezier 18 Drawing
        let bezier18Path = NSBezierPath()
        bezier18Path.move(to: NSPoint(x: 33, y: 0))
        bezier18Path.line(to: NSPoint(x: 33, y: 3.23))
        strokeColor.setStroke()
        bezier18Path.lineWidth = 2
        bezier18Path.stroke()


        //// Bezier 19 Drawing
        let bezier19Path = NSBezierPath()
        bezier19Path.move(to: NSPoint(x: 36, y: 0))
        bezier19Path.line(to: NSPoint(x: 36, y: 3.23))
        strokeColor.setStroke()
        bezier19Path.lineWidth = 2
        bezier19Path.stroke()


        //// Bezier 20 Drawing
        let bezier20Path = NSBezierPath()
        bezier20Path.move(to: NSPoint(x: 39, y: 0))
        bezier20Path.line(to: NSPoint(x: 39, y: 3.23))
        strokeColor.setStroke()
        bezier20Path.lineWidth = 2
        bezier20Path.stroke()


        //// Bezier 21 Drawing
        let bezier21Path = NSBezierPath()
        bezier21Path.move(to: NSPoint(x: 46.77, y: 40))
        bezier21Path.line(to: NSPoint(x: 50, y: 40))
        strokeColor.setStroke()
        bezier21Path.lineWidth = 2
        bezier21Path.stroke()


        //// Bezier 22 Drawing
        let bezier22Path = NSBezierPath()
        bezier22Path.move(to: NSPoint(x: 46.77, y: 37))
        bezier22Path.line(to: NSPoint(x: 50, y: 37))
        strokeColor.setStroke()
        bezier22Path.lineWidth = 2
        bezier22Path.stroke()


        //// Bezier 23 Drawing
        let bezier23Path = NSBezierPath()
        bezier23Path.move(to: NSPoint(x: 46.77, y: 34))
        bezier23Path.line(to: NSPoint(x: 50, y: 34))
        strokeColor.setStroke()
        bezier23Path.lineWidth = 2
        bezier23Path.stroke()


        //// Bezier 24 Drawing
        let bezier24Path = NSBezierPath()
        bezier24Path.move(to: NSPoint(x: 46.77, y: 30))
        bezier24Path.line(to: NSPoint(x: 50, y: 30))
        strokeColor.setStroke()
        bezier24Path.lineWidth = 2
        bezier24Path.stroke()


        //// Bezier 25 Drawing
        let bezier25Path = NSBezierPath()
        bezier25Path.move(to: NSPoint(x: 46.77, y: 27))
        bezier25Path.line(to: NSPoint(x: 50, y: 27))
        strokeColor.setStroke()
        bezier25Path.lineWidth = 2
        bezier25Path.stroke()


        //// Bezier 26 Drawing
        let bezier26Path = NSBezierPath()
        bezier26Path.move(to: NSPoint(x: 46.77, y: 24))
        bezier26Path.line(to: NSPoint(x: 50, y: 24))
        strokeColor.setStroke()
        bezier26Path.lineWidth = 2
        bezier26Path.stroke()


        //// Bezier 27 Drawing
        let bezier27Path = NSBezierPath()
        bezier27Path.move(to: NSPoint(x: 46.77, y: 21))
        bezier27Path.line(to: NSPoint(x: 50, y: 21))
        strokeColor.setStroke()
        bezier27Path.lineWidth = 2
        bezier27Path.stroke()


        //// Bezier 28 Drawing
        let bezier28Path = NSBezierPath()
        bezier28Path.move(to: NSPoint(x: 46.77, y: 17))
        bezier28Path.line(to: NSPoint(x: 50, y: 17))
        strokeColor.setStroke()
        bezier28Path.lineWidth = 2
        bezier28Path.stroke()


        //// Bezier 29 Drawing
        let bezier29Path = NSBezierPath()
        bezier29Path.move(to: NSPoint(x: 46.77, y: 14))
        bezier29Path.line(to: NSPoint(x: 50, y: 14))
        strokeColor.setStroke()
        bezier29Path.lineWidth = 2
        bezier29Path.stroke()


        //// Bezier 30 Drawing
        let bezier30Path = NSBezierPath()
        bezier30Path.move(to: NSPoint(x: 46.77, y: 11))
        bezier30Path.line(to: NSPoint(x: 50, y: 11))
        strokeColor.setStroke()
        bezier30Path.lineWidth = 2
        bezier30Path.stroke()


        //// Bezier 31 Drawing
        let bezier31Path = NSBezierPath()
        bezier31Path.move(to: NSPoint(x: 0, y: 40))
        bezier31Path.line(to: NSPoint(x: 3.23, y: 40))
        strokeColor.setStroke()
        bezier31Path.lineWidth = 2
        bezier31Path.stroke()


        //// Bezier 32 Drawing
        let bezier32Path = NSBezierPath()
        bezier32Path.move(to: NSPoint(x: 0, y: 37))
        bezier32Path.line(to: NSPoint(x: 3.23, y: 37))
        strokeColor.setStroke()
        bezier32Path.lineWidth = 2
        bezier32Path.stroke()


        //// Bezier 33 Drawing
        let bezier33Path = NSBezierPath()
        bezier33Path.move(to: NSPoint(x: 0, y: 34))
        bezier33Path.line(to: NSPoint(x: 3.23, y: 34))
        strokeColor.setStroke()
        bezier33Path.lineWidth = 2
        bezier33Path.stroke()


        //// Bezier 34 Drawing
        let bezier34Path = NSBezierPath()
        bezier34Path.move(to: NSPoint(x: 0, y: 30))
        bezier34Path.line(to: NSPoint(x: 3.23, y: 30))
        strokeColor.setStroke()
        bezier34Path.lineWidth = 2
        bezier34Path.stroke()


        //// Bezier 35 Drawing
        let bezier35Path = NSBezierPath()
        bezier35Path.move(to: NSPoint(x: 0, y: 27))
        bezier35Path.line(to: NSPoint(x: 3.23, y: 27))
        strokeColor.setStroke()
        bezier35Path.lineWidth = 2
        bezier35Path.stroke()


        //// Bezier 36 Drawing
        let bezier36Path = NSBezierPath()
        bezier36Path.move(to: NSPoint(x: 0, y: 24))
        bezier36Path.line(to: NSPoint(x: 3.23, y: 24))
        strokeColor.setStroke()
        bezier36Path.lineWidth = 2
        bezier36Path.stroke()


        //// Bezier 37 Drawing
        let bezier37Path = NSBezierPath()
        bezier37Path.move(to: NSPoint(x: 0, y: 21))
        bezier37Path.line(to: NSPoint(x: 3.23, y: 21))
        strokeColor.setStroke()
        bezier37Path.lineWidth = 2
        bezier37Path.stroke()


        //// Bezier 38 Drawing
        let bezier38Path = NSBezierPath()
        bezier38Path.move(to: NSPoint(x: 0, y: 17))
        bezier38Path.line(to: NSPoint(x: 3.23, y: 17))
        strokeColor.setStroke()
        bezier38Path.lineWidth = 2
        bezier38Path.stroke()


        //// Bezier 39 Drawing
        let bezier39Path = NSBezierPath()
        bezier39Path.move(to: NSPoint(x: 0, y: 14))
        bezier39Path.line(to: NSPoint(x: 3.23, y: 14))
        strokeColor.setStroke()
        bezier39Path.lineWidth = 2
        bezier39Path.stroke()


        //// Bezier 40 Drawing
        let bezier40Path = NSBezierPath()
        bezier40Path.move(to: NSPoint(x: 0, y: 11))
        bezier40Path.line(to: NSPoint(x: 3.23, y: 11))
        strokeColor.setStroke()
        bezier40Path.lineWidth = 2
        bezier40Path.stroke()


        //// Bezier 41 Drawing
        let bezier41Path = NSBezierPath()
        bezier41Path.move(to: NSPoint(x: 40.32, y: 9))
        bezier41Path.line(to: NSPoint(x: 41.94, y: 9))
        strokeColor.setStroke()
        bezier41Path.lineWidth = 2
        bezier41Path.stroke()


        //// Rectangle 3 Drawing
        let rectangle3Path = NSBezierPath(roundedRect: NSRect(x: 5.65, y: 5.65, width: 38.7, height: 38.7), xRadius: 1.6, yRadius: 1.6)
        strokeColor.setStroke()
        rectangle3Path.lineWidth = 2
        rectangle3Path.stroke()


        //// Rectangle 4 Drawing
        let rectangle4Path = NSBezierPath(rect: NSRect(x: 11.3, y: 30.68, width: 27.4, height: 8.05))
        fillColor3.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = NSBezierPath(rect: NSRect(x: 11.28, y: 27.45, width: 16.15, height: 1.6))
        fillColor3.setFill()
        rectangle5Path.fill()


        //// Rectangle 6 Drawing
        let rectangle6Path = NSBezierPath(rect: NSRect(x: 11.28, y: 24.2, width: 8.05, height: 1.6))
        fillColor3.setFill()
        rectangle6Path.fill()


        //// Bezier 42 Drawing
        let bezier42Path = NSBezierPath()
        bezier42Path.move(to: NSPoint(x: 24.19, y: 34.68))
        bezier42Path.line(to: NSPoint(x: 25.81, y: 34.68))
        strokeColor.setStroke()
        bezier42Path.lineWidth = 2
        bezier42Path.stroke()


        //// Bezier 43 Drawing
        let bezier43Path = NSBezierPath()
        bezier43Path.move(to: NSPoint(x: 20.97, y: 34.68))
        bezier43Path.line(to: NSPoint(x: 22.58, y: 34.68))
        strokeColor.setStroke()
        bezier43Path.lineWidth = 2
        bezier43Path.stroke()


        //// Bezier 44 Drawing
        let bezier44Path = NSBezierPath()
        bezier44Path.move(to: NSPoint(x: 27.42, y: 34.68))
        bezier44Path.line(to: NSPoint(x: 29.03, y: 34.68))
        strokeColor.setStroke()
        bezier44Path.lineWidth = 2
        bezier44Path.stroke()
    }

    @objc dynamic public class func drawSoftware() {
        //// Color Declarations
        let fillColor = NSColor(red: 1, green: 1, blue: 1, alpha: 1)
        let strokeColor = NSColor(red: 0.374, green: 0.391, blue: 0.396, alpha: 1)
        let fillColor4 = NSColor(red: 1, green: 0.771, blue: 0.413, alpha: 1)

        //// Group 2
        //// Oval Drawing
        let ovalPath = NSBezierPath(ovalIn: NSRect(x: 0, y: 0, width: 50, height: 50))
        fillColor.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        let oval2Path = NSBezierPath(ovalIn: NSRect(x: 0, y: 0, width: 50, height: 50))
        strokeColor.setStroke()
        oval2Path.lineWidth = 2
        oval2Path.stroke()


        //// Oval 3 Drawing
        let oval3Path = NSBezierPath(ovalIn: NSRect(x: 18.95, y: 18.95, width: 12.1, height: 12.1))
        fillColor4.setFill()
        oval3Path.fill()


        //// Oval 4 Drawing
        let oval4Path = NSBezierPath(ovalIn: NSRect(x: 18.95, y: 18.95, width: 12.1, height: 12.1))
        strokeColor.setStroke()
        oval4Path.lineWidth = 2
        oval4Path.stroke()


        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 25, y: 44.83))
        bezierPath.curve(to: NSPoint(x: 5.17, y: 25), controlPoint1: NSPoint(x: 14.05, y: 44.83), controlPoint2: NSPoint(x: 5.17, y: 35.95))
        strokeColor.setStroke()
        bezierPath.lineWidth = 2
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 10.34, y: 25))
        bezier2Path.curve(to: NSPoint(x: 25, y: 39.66), controlPoint1: NSPoint(x: 10.34, y: 33.09), controlPoint2: NSPoint(x: 16.91, y: 39.66))
        strokeColor.setStroke()
        bezier2Path.lineWidth = 2
        bezier2Path.stroke()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: 25, y: 5.17))
        bezier3Path.curve(to: NSPoint(x: 44.83, y: 25), controlPoint1: NSPoint(x: 35.95, y: 5.17), controlPoint2: NSPoint(x: 44.83, y: 14.05))
        strokeColor.setStroke()
        bezier3Path.lineWidth = 2
        bezier3Path.stroke()


        //// Bezier 4 Drawing
        let bezier4Path = NSBezierPath()
        bezier4Path.move(to: NSPoint(x: 39.66, y: 25))
        bezier4Path.curve(to: NSPoint(x: 25, y: 10.34), controlPoint1: NSPoint(x: 39.66, y: 16.91), controlPoint2: NSPoint(x: 33.09, y: 10.34))
        strokeColor.setStroke()
        bezier4Path.lineWidth = 2
        bezier4Path.stroke()
    }

    @objc dynamic public class func drawSavingFile() {
        //// Color Declarations
        let fillColor = NSColor(red: 1, green: 1, blue: 1, alpha: 1)
        let fillColor2 = NSColor(red: 0.463, green: 0.887, blue: 0.903, alpha: 1)
        let strokeColor = NSColor(red: 0.374, green: 0.391, blue: 0.396, alpha: 1)
        let fillColor4 = NSColor(red: 1, green: 0.771, blue: 0.413, alpha: 1)

        //// Group 2
        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 19.36, y: 5.75))
        bezierPath.curve(to: NSPoint(x: 18.56, y: 5), controlPoint1: NSPoint(x: 19.36, y: 5.34), controlPoint2: NSPoint(x: 19, y: 5))
        bezierPath.line(to: NSPoint(x: 5.8, y: 5))
        bezierPath.curve(to: NSPoint(x: 5, y: 5.75), controlPoint1: NSPoint(x: 5.36, y: 5), controlPoint2: NSPoint(x: 5, y: 5.34))
        bezierPath.line(to: NSPoint(x: 5, y: 17.75))
        bezierPath.curve(to: NSPoint(x: 5.8, y: 18.5), controlPoint1: NSPoint(x: 5, y: 18.16), controlPoint2: NSPoint(x: 5.36, y: 18.5))
        bezierPath.line(to: NSPoint(x: 17.23, y: 18.5))
        bezierPath.line(to: NSPoint(x: 19.36, y: 16.5))
        bezierPath.line(to: NSPoint(x: 19.36, y: 5.75))
        bezierPath.line(to: NSPoint(x: 19.36, y: 5.75))
        bezierPath.close()
        bezierPath.windingRule = .evenOdd
        fillColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 17.23, y: 5))
        bezier2Path.line(to: NSPoint(x: 17.23, y: 10.75))
        bezier2Path.curve(to: NSPoint(x: 16.43, y: 11.5), controlPoint1: NSPoint(x: 17.23, y: 11.16), controlPoint2: NSPoint(x: 16.87, y: 11.5))
        bezier2Path.line(to: NSPoint(x: 7.92, y: 11.5))
        bezier2Path.curve(to: NSPoint(x: 7.13, y: 10.75), controlPoint1: NSPoint(x: 7.48, y: 11.5), controlPoint2: NSPoint(x: 7.13, y: 11.16))
        bezier2Path.line(to: NSPoint(x: 7.13, y: 5))
        bezier2Path.windingRule = .evenOdd
        fillColor4.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: 15.9, y: 18.5))
        bezier3Path.line(to: NSPoint(x: 7.13, y: 18.5))
        bezier3Path.line(to: NSPoint(x: 7.13, y: 14.5))
        bezier3Path.curve(to: NSPoint(x: 7.92, y: 13.75), controlPoint1: NSPoint(x: 7.13, y: 14.09), controlPoint2: NSPoint(x: 7.48, y: 13.75))
        bezier3Path.line(to: NSPoint(x: 15.1, y: 13.75))
        bezier3Path.curve(to: NSPoint(x: 15.9, y: 14.5), controlPoint1: NSPoint(x: 15.54, y: 13.75), controlPoint2: NSPoint(x: 15.9, y: 14.09))
        bezier3Path.line(to: NSPoint(x: 15.9, y: 18.5))
        bezier3Path.line(to: NSPoint(x: 15.9, y: 18.5))
        bezier3Path.close()
        bezier3Path.windingRule = .evenOdd
        fillColor2.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = NSBezierPath()
        bezier4Path.move(to: NSPoint(x: 19.36, y: 5.75))
        bezier4Path.curve(to: NSPoint(x: 18.56, y: 5), controlPoint1: NSPoint(x: 19.36, y: 5.34), controlPoint2: NSPoint(x: 19, y: 5))
        bezier4Path.line(to: NSPoint(x: 5.8, y: 5))
        bezier4Path.curve(to: NSPoint(x: 5, y: 5.75), controlPoint1: NSPoint(x: 5.36, y: 5), controlPoint2: NSPoint(x: 5, y: 5.34))
        bezier4Path.line(to: NSPoint(x: 5, y: 17.75))
        bezier4Path.curve(to: NSPoint(x: 5.8, y: 18.5), controlPoint1: NSPoint(x: 5, y: 18.16), controlPoint2: NSPoint(x: 5.36, y: 18.5))
        bezier4Path.line(to: NSPoint(x: 17.23, y: 18.5))
        bezier4Path.line(to: NSPoint(x: 19.36, y: 16.5))
        bezier4Path.line(to: NSPoint(x: 19.36, y: 5.75))
        bezier4Path.line(to: NSPoint(x: 19.36, y: 5.75))
        bezier4Path.close()
        strokeColor.setStroke()
        bezier4Path.lineWidth = 1
        bezier4Path.stroke()


        //// Bezier 5 Drawing
        let bezier5Path = NSBezierPath()
        bezier5Path.move(to: NSPoint(x: 15.37, y: 14))
        bezier5Path.line(to: NSPoint(x: 10.05, y: 14))
        bezier5Path.curve(to: NSPoint(x: 9.25, y: 14.75), controlPoint1: NSPoint(x: 9.61, y: 14), controlPoint2: NSPoint(x: 9.25, y: 14.34))
        bezier5Path.line(to: NSPoint(x: 9.25, y: 19))
        bezier5Path.line(to: NSPoint(x: 16.17, y: 19))
        bezier5Path.line(to: NSPoint(x: 16.17, y: 14.75))
        bezier5Path.curve(to: NSPoint(x: 15.37, y: 14), controlPoint1: NSPoint(x: 16.17, y: 14.34), controlPoint2: NSPoint(x: 15.81, y: 14))
        bezier5Path.line(to: NSPoint(x: 15.37, y: 14))
        bezier5Path.close()
        bezier5Path.windingRule = .evenOdd
        fillColor.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = NSBezierPath()
        bezier6Path.move(to: NSPoint(x: 15.37, y: 14))
        bezier6Path.line(to: NSPoint(x: 10.05, y: 14))
        bezier6Path.curve(to: NSPoint(x: 9.25, y: 14.75), controlPoint1: NSPoint(x: 9.61, y: 14), controlPoint2: NSPoint(x: 9.25, y: 14.34))
        bezier6Path.line(to: NSPoint(x: 9.25, y: 19))
        bezier6Path.line(to: NSPoint(x: 16.17, y: 19))
        bezier6Path.line(to: NSPoint(x: 16.17, y: 14.75))
        bezier6Path.curve(to: NSPoint(x: 15.37, y: 14), controlPoint1: NSPoint(x: 16.17, y: 14.34), controlPoint2: NSPoint(x: 15.81, y: 14))
        bezier6Path.line(to: NSPoint(x: 15.37, y: 14))
        bezier6Path.close()
        strokeColor.setStroke()
        bezier6Path.lineWidth = 1
        bezier6Path.stroke()


        //// Bezier 7 Drawing
        let bezier7Path = NSBezierPath()
        bezier7Path.move(to: NSPoint(x: 17.23, y: 5))
        bezier7Path.line(to: NSPoint(x: 17.23, y: 10.75))
        bezier7Path.curve(to: NSPoint(x: 16.43, y: 11.5), controlPoint1: NSPoint(x: 17.23, y: 11.16), controlPoint2: NSPoint(x: 16.87, y: 11.5))
        bezier7Path.line(to: NSPoint(x: 7.92, y: 11.5))
        bezier7Path.curve(to: NSPoint(x: 7.13, y: 10.75), controlPoint1: NSPoint(x: 7.48, y: 11.5), controlPoint2: NSPoint(x: 7.13, y: 11.16))
        bezier7Path.line(to: NSPoint(x: 7.13, y: 5))
        strokeColor.setStroke()
        bezier7Path.lineWidth = 1
        bezier7Path.stroke()


        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 13.6, y: 15.18, width: 1.3, height: 2.55), xRadius: 0.6, yRadius: 0.6)
        fillColor2.setFill()
        rectanglePath.fill()
    }

    @objc dynamic public class func drawOpeningFile() {
        //// Color Declarations
        let fillColor6 = NSColor(red: 0.404, green: 0.867, blue: 0.878, alpha: 1)
        let fillColor7 = NSColor(red: 1, green: 1, blue: 1, alpha: 1)
        let fillColor8 = NSColor(red: 1, green: 0.725, blue: 0.341, alpha: 1)
        let fillColor9 = NSColor(red: 0.949, green: 0.549, blue: 0.075, alpha: 1)
        let strokeColor2 = NSColor(red: 0.302, green: 0.318, blue: 0.322, alpha: 1)

        //// Page-2
        //// 48
        //// load 2
        //// Layer_252
        //// Group 7
        //// Shape Drawing
        let shapePath = NSBezierPath()
        shapePath.move(to: NSPoint(x: 21, y: 15.21))
        shapePath.line(to: NSPoint(x: 21, y: 18.8))
        shapePath.line(to: NSPoint(x: 9.39, y: 18.8))
        shapePath.line(to: NSPoint(x: 8.23, y: 20))
        shapePath.line(to: NSPoint(x: 3, y: 20))
        shapePath.line(to: NSPoint(x: 3, y: 15.21))
        shapePath.line(to: NSPoint(x: 21, y: 15.21))
        shapePath.close()
        shapePath.windingRule = .evenOdd
        fillColor6.setFill()
        shapePath.fill()


        //// Rectangle-path Drawing
        let rectanglepathPath = NSBezierPath(rect: NSRect(x: 4.21, y: 15.13, width: 15.58, height: 2.94))
        fillColor7.setFill()
        rectanglepathPath.fill()


        //// Shape 2 Drawing
        let shape2Path = NSBezierPath()
        shape2Path.move(to: NSPoint(x: 21, y: 4.42))
        shape2Path.line(to: NSPoint(x: 3, y: 4.42))
        shape2Path.line(to: NSPoint(x: 3, y: 15.21))
        shape2Path.line(to: NSPoint(x: 8.23, y: 15.21))
        shape2Path.line(to: NSPoint(x: 9.39, y: 16.4))
        shape2Path.line(to: NSPoint(x: 21, y: 16.4))
        shape2Path.line(to: NSPoint(x: 21, y: 4.42))
        shape2Path.close()
        shape2Path.windingRule = .evenOdd
        fillColor8.setFill()
        shape2Path.fill()


        //// Rectangle-path 2 Drawing
        let rectanglepath2Path = NSBezierPath(rect: NSRect(x: 3, y: 4.42, width: 18, height: 1.21))
        fillColor9.setFill()
        rectanglepath2Path.fill()


        //// Shape 3 Drawing
        let shape3Path = NSBezierPath()
        shape3Path.move(to: NSPoint(x: 21, y: 4.42))
        shape3Path.line(to: NSPoint(x: 3, y: 4.42))
        shape3Path.line(to: NSPoint(x: 3, y: 15.21))
        shape3Path.line(to: NSPoint(x: 8.23, y: 15.21))
        shape3Path.line(to: NSPoint(x: 9.39, y: 16.4))
        shape3Path.line(to: NSPoint(x: 21, y: 16.4))
        shape3Path.line(to: NSPoint(x: 21, y: 4.42))
        shape3Path.close()
        strokeColor2.setStroke()
        shape3Path.lineWidth = 1
        shape3Path.miterLimit = 4
        shape3Path.stroke()


        //// Shape 4 Drawing
        let shape4Path = NSBezierPath()
        shape4Path.move(to: NSPoint(x: 21, y: 16.4))
        shape4Path.line(to: NSPoint(x: 21, y: 18.8))
        shape4Path.line(to: NSPoint(x: 9.39, y: 18.8))
        shape4Path.line(to: NSPoint(x: 8.23, y: 20))
        shape4Path.line(to: NSPoint(x: 3, y: 20))
        shape4Path.line(to: NSPoint(x: 3, y: 15.21))
        strokeColor2.setStroke()
        shape4Path.lineWidth = 1
        shape4Path.miterLimit = 4
        shape4Path.stroke()
    }

    //// Generated Images

    @objc dynamic public class var imageOfHardware: NSImage {
        if Cache.imageOfHardware != nil {
            return Cache.imageOfHardware!
        }

        Cache.imageOfHardware = NSImage(size: NSSize(width: 50, height: 50), flipped: false) { _ in 
            Onoicons.drawHardware()

            return true
        }

        return Cache.imageOfHardware!
    }

    @objc dynamic public class var imageOfSoftware: NSImage {
        if Cache.imageOfSoftware != nil {
            return Cache.imageOfSoftware!
        }

        Cache.imageOfSoftware = NSImage(size: NSSize(width: 50, height: 50), flipped: false) { _ in 
            Onoicons.drawSoftware()

            return true
        }

        return Cache.imageOfSoftware!
    }

    @objc dynamic public class var imageOfSavingFile: NSImage {
        if Cache.imageOfSavingFile != nil {
            return Cache.imageOfSavingFile!
        }

        Cache.imageOfSavingFile = NSImage(size: NSSize(width: 25, height: 25), flipped: false) { _ in 
            Onoicons.drawSavingFile()

            return true
        }

        return Cache.imageOfSavingFile!
    }

    @objc dynamic public class var imageOfOpeningFile: NSImage {
        if Cache.imageOfOpeningFile != nil {
            return Cache.imageOfOpeningFile!
        }

        Cache.imageOfOpeningFile = NSImage(size: NSSize(width: 25, height: 25), flipped: false) { _ in 
            Onoicons.drawOpeningFile()

            return true
        }

        return Cache.imageOfOpeningFile!
    }

}
